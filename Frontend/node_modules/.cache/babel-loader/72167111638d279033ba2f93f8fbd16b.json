{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ecommerce-store\\\\frontend\\\\src\\\\Screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Message } from '../Components/Message';\nimport { Loader } from '../Components/Loader';\nimport { Login } from '../actions/userActions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport FormContainer from '../Components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginScreen(_ref) {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const {\n    search\n  } = useLocation();\n  const redirectUrl = new URLSearchParams(search).get('redirectUrl');\n  const redirect = redirectUrl ? redirectUrl : '/'; //const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  const loginSuccessNotification = () => toast(\"Login Successful\", {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 2000,\n    type: toast.TYPE.SUCCESS\n  });\n\n  const loginFailureNotification = () => toast(\"Login Failed\", {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 2000,\n    type: toast.TYPE.ERROR\n  });\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [userInfo, navigate, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //this is where to submit form data to backend\n\n    dispatch(Login(email, password));\n\n    if (!error) {\n      loginSuccessNotification();\n    } else {\n      loginFailureNotification();\n    }\n\n    loginNotification();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      className: \"my-2\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter your email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"my-4\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \".mt-#\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"New Customer?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/register?redirect=${redirect}` : '/register',\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n\n_s(LoginScreen, \"DoAjit1LbNxBrNdKoCjatQ6dym0=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useLocation];\n});\n\n_c = LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["D:/React/ecommerce-store/frontend/src/Screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","Login","ToastContainer","toast","FormContainer","LoginScreen","location","email","setEmail","password","setPassword","dispatch","navigate","userLogin","state","loading","error","userInfo","search","redirectUrl","URLSearchParams","get","redirect","loginSuccessNotification","position","POSITION","TOP_RIGHT","autoClose","type","TYPE","SUCCESS","loginFailureNotification","ERROR","submitHandler","e","preventDefault","loginNotification","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Message} from '../Components/Message'\r\nimport {Loader} from '../Components/Loader'\r\nimport { Login } from '../actions/userActions'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport FormContainer from '../Components/FormContainer'\r\n\r\nexport default function LoginScreen({ location }) {\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n     const { search } = useLocation();\r\n    const redirectUrl = new URLSearchParams(search).get('redirectUrl')\r\n    const redirect = redirectUrl ? redirectUrl : '/'\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const loginSuccessNotification = () => toast(\"Login Successful\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: 2000,\r\n        type: toast.TYPE.SUCCESS\r\n    });\r\n\r\n    const loginFailureNotification = () => toast(\"Login Failed\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: 2000,\r\n        type: toast.TYPE.ERROR\r\n    }\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [userInfo, navigate, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        //this is where to submit form data to backend\r\n        dispatch(Login(email, password))\r\n        if (!error) {\r\n            loginSuccessNotification()\r\n        }else {\r\n            loginFailureNotification()\r\n        }\r\n        loginNotification()\r\n    }\r\n\r\n    return <FormContainer className=\"my-5\">\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <ToastContainer />\r\n        <Form onSubmit={submitHandler} className=\"my-2\">\r\n            <Form.Group controlId=\"email\" className=\"my-4\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" \r\n                placeholder=\"Enter your email address\"\r\n                value={email} \r\n                onChange={(e) => setEmail(e.target.value)}>\r\n                \r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId=\"password\" className=\"my-4\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" \r\n                placeholder=\"Enter your password\"\r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)}>\r\n                \r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" className=\"my-4\" >Sign In</Button>\r\n        </Form>\r\n\r\n        <Row className=\".mt-#\">\r\n            <Col>\r\n                New Customer?{\" \"}\r\n                <Link to={ redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n            </Col>\r\n        </Row>  \r\n    </FormContainer>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}