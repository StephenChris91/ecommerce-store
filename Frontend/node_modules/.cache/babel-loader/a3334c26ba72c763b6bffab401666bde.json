{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './reducers/productListReducer';\nimport { productDetailsReducer } from './reducers/productDetailsReducer';\nimport { cartReducer } from './reducers/cartReducer';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));","map":{"version":3,"sources":["D:/React-Testing/ecommerce/frontend/src/Store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","reducer","productList","productDetails","cart","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAGA,MAAMG,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,WAAW,EAAET,kBADe;AAE5BU,EAAAA,cAAc,EAAET,qBAFY;AAG5BU,EAAAA,IAAI,EAAET;AAHsB,CAAD,CAA/B;AAMA,MAAMU,YAAY,GAAG;AACjBD,EAAAA,IAAI,EAAE;AACFE,IAAAA,SAAS,EAAEV;AADT;AADW,CAArB;AAMA,MAAMW,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAGA,OAAO,MAAMiB,KAAK,GAAGpB,WAAW,CAC5Ba,OAD4B,EAE5BT,mBAAmB,CACfF,eAAe,CAAC,GAAGiB,UAAJ,CADA,CAFS,CAAzB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer } from './reducers/productListReducer';\r\nimport { productDetailsReducer } from './reducers/productDetailsReducer';\r\nimport { cartReducer } from './reducers/cartReducer';\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer\r\n})\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}