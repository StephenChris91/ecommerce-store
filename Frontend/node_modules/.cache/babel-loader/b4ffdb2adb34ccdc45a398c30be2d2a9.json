{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAILURE, CREATE_ORDER_DETAILS_SUCCESS, CREATE_ORDER_DETAILS_FAILURE, CREATE_ORDER_DETAILS_REQUEST } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: CREATE_ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/ecommerce-store/frontend/src/actions/orderActions.js"],"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILURE","CREATE_ORDER_DETAILS_SUCCESS","CREATE_ORDER_DETAILS_FAILURE","CREATE_ORDER_DETAILS_REQUEST","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,4BAJJ,EAKIC,4BALJ,EAMIC,4BANJ,QAOO,6BAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAIA,UAAM;AACFY,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAEAH,QAAQ,EAFd;AAIE,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAClB,aADkB,EAEnBX,KAFmB,EAGnBM,MAHmB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV,oBADD;AAELmB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GA1BD,CA0BE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET,oBADD;AAELkB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACPF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADb,GAEPF,KAAK,CAACE;AAJH,KAAD,CAAR;AAKH;AAGJ,CApCM;AAqCP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAOhB,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAIA,UAAM;AACFO,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAEAH,QAAQ,EAFd;AAIE,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACoB,GAAN,CAClB,aADkB,EAEnBZ,MAFmB,CAAvB;AAKAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,4BADD;AAELiB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAzBD,CAyBE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP,4BADD;AAELgB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACPF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADb,GAEPF,KAAK,CAACE;AAJH,KAAD,CAAR;AAKH;AAGJ,CAnCM","sourcesContent":["import {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAILURE,\r\n    CREATE_ORDER_DETAILS_SUCCESS,\r\n    CREATE_ORDER_DETAILS_FAILURE,\r\n    CREATE_ORDER_DETAILS_REQUEST\r\n} from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_ORDER_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n        \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders`,\r\n            order,\r\n            config\r\n            );\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        });\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: CREATE_ORDER_FAILURE, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message});\r\n    }\r\n    \r\n    \r\n}\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_ORDER_DETAILS_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n        \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders`,\r\n            config\r\n            );\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: CREATE_ORDER_DETAILS_FAILURE, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message});\r\n    }\r\n    \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}