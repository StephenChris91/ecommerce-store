{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './reducers/productListReducer';\nimport { productDetailsReducer } from './reducers/productDetailsReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []; //const userInforFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  updateProfile: userUpdateProfileReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nexport const store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));","map":{"version":3,"sources":["D:/React-Testing/ecommerce/frontend/src/Store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","updateProfile","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,QAAoG,wBAApG;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH,C,CACA;;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,OAAO,GAAGjB,eAAe,CAAC;AAC5BkB,EAAAA,WAAW,EAAEd,kBADe;AAE5Be,EAAAA,cAAc,EAAEd,qBAFY;AAG5Be,EAAAA,IAAI,EAAEd,WAHsB;AAI5Be,EAAAA,SAAS,EAAEd,gBAJiB;AAK5Be,EAAAA,YAAY,EAAEd,mBALc;AAM5Be,EAAAA,WAAW,EAAEd,kBANe;AAO5Be,EAAAA,aAAa,EAAEd;AAPa,CAAD,CAA/B;AAWA,MAAMe,YAAY,GAAG;AACjBL,EAAAA,IAAI,EAAE;AACFM,IAAAA,SAAS,EAAEf;AADT,GADW;AAIjBU,EAAAA,SAAS,EAAE;AACPM,IAAAA,QAAQ,EAAEX;AADH;AAJM,CAArB;AASA,MAAMY,UAAU,GAAG,CAAC1B,KAAD,CAAnB;AAGA,OAAO,MAAM2B,KAAK,GAAG9B,WAAW,CAC5BkB,OAD4B,EAE5BQ,YAF4B,EAG5BtB,mBAAmB,CACfF,eAAe,CAAC,GAAG2B,UAAJ,CADA,CAHS,CAAzB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer } from './reducers/productListReducer';\r\nimport { productDetailsReducer } from './reducers/productDetailsReducer';\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer';\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n//const userInforFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    updateProfile: userUpdateProfileReducer,\r\n\r\n})\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage\r\n    },\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}