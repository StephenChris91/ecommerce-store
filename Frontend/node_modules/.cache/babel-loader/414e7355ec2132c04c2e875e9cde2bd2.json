{"ast":null,"code":"var _jsxFileName = \"D:\\\\ecommerce-store\\\\frontend\\\\src\\\\Components\\\\CartDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Row, Col, Image, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Message } from './Message';\nimport { removeFromCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CartDropdown() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [qty, setQty] = useState(1);\n  const id = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const cart = useSelector(state => state.cart);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const {\n    cartItems\n  } = cart;\n\n  const checkoutHandler = () => {\n    if (userInfo) {\n      navigate(`/cart/${id}?qty=${qty}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n      message: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cart-drop-down\",\n      className: \"cart-drop\",\n      children: [cartItems.map(item => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: item.image,\n            alt: item.name,\n            fluid: true,\n            rounded: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => dispatch(removeFromCart(item._id)),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"dropdown-btn rounded\",\n          onClick: checkoutHandler,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\n\n_s(CartDropdown, \"D213bhhDmixmacerZMDbmIIPNxs=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = CartDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["D:/ecommerce-store/frontend/src/Components/CartDropdown.js"],"names":["React","useState","Row","Col","Image","Button","useDispatch","useSelector","useNavigate","useParams","Message","removeFromCart","CartDropdown","isOpen","setIsOpen","qty","setQty","id","dispatch","navigate","cart","state","userLogin","userInfo","cartItems","checkoutHandler","length","map","item","image","name","price","_id"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useState} from 'react';\r\nimport { Row, Col, Image, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Message } from './Message';\r\nimport { removeFromCart } from '../actions/cartActions';\r\n\r\n\r\n\r\nexport function CartDropdown() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [qty, setQty] = useState(1);\r\n    const id = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const { cartItems } = cart\r\n    \r\n    const checkoutHandler = () => {\r\n        if(userInfo) {\r\n            navigate(`/cart/${id}?qty=${qty}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n             {cartItems.length === 0 ? <Message message=\"Your cart is empty\" /> : (\r\n             <div id=\"cart-drop-down\" className='cart-drop'>\r\n                {cartItems.map(item => (\r\n                    <Row key={item.id}>\r\n                        <Col variant='flush'>\r\n                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{item.name}</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>${item.price}</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button variant=\"danger\" onClick={() => dispatch(removeFromCart(item._id))}>X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                <Row>\r\n                    <Button variant=\"primary\" className=\"dropdown-btn rounded\"onClick={checkoutHandler}>Checkout</Button>\r\n                </Row>\r\n            </div>\r\n             )\r\n            }\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}