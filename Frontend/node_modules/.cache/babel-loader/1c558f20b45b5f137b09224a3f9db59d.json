{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Testing\\\\ecommerce\\\\frontend\\\\src\\\\Screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Message } from '../Components/Message';\nimport { Loader } from '../Components/Loader';\nimport { Register } from '../actions/userActions';\nimport FormContainer from '../Components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userRegister = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const {\n    search\n  } = useLocation();\n  const redirectUrl = new URLSearchParams(search).get('redirectUrl');\n  const redirect = redirectUrl ? redirectUrl : '/';\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [userInfo, navigate, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      dispatch(Register(name, email, password));\n    } else {\n      setMessage('Passwords do not match');\n    }\n\n    dispatch(Register(name, email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter your email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm your password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"my-4\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"Have an account ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : '/login',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n\n_s(RegisterScreen, \"4OjSdvsjHFD1gU+T4kGdccElmHg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useLocation];\n});\n\n_c = RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["D:/React-Testing/ecommerce/frontend/src/Screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","Register","FormContainer","RegisterScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","navigate","userRegister","state","userLogin","loading","error","userInfo","search","redirectUrl","URLSearchParams","get","redirect","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Message} from '../Components/Message'\r\nimport {Loader} from '../Components/Loader'\r\nimport { Register } from '../actions/userActions'\r\nimport FormContainer from '../Components/FormContainer'\r\n\r\nexport default function RegisterScreen( ) {\r\n    const [name, setName] = useState('')\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const userRegister = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const { search } = useLocation();\r\n    const redirectUrl = new URLSearchParams(search).get('redirectUrl')\r\n    const redirect = redirectUrl ? redirectUrl : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [userInfo, navigate, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password === confirmPassword){\r\n            dispatch(Register(name, email, password))\r\n        }else{\r\n            \r\n            setMessage('Passwords do not match')\r\n        }\r\n\r\n        dispatch(Register(name, email, password))\r\n\r\n    }\r\n\r\n    return <FormContainer className=\"my-5\">\r\n        <h1>Create an Account</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"name\" \r\n                placeholder=\"Enter your name\"\r\n                value={name} \r\n                onChange={(e) => setName(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" \r\n                placeholder=\"Enter your email address\"\r\n                value={email} \r\n                onChange={(e) => setEmail(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" \r\n                placeholder=\"Enter your password\"\r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control type=\"password\" \r\n                placeholder=\"Confirm your password\"\r\n                value={confirmPassword} \r\n                onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" className=\"my-4\" >Register</Button>\r\n        </Form>\r\n\r\n        <Row>\r\n            <Col>\r\n                Have an account ?{\" \"}\r\n                <Link to={ redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n            </Col>\r\n        </Row>  \r\n    </FormContainer>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}