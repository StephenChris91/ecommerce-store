{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_FAILURE, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAILURE, USER_DETAILS_REQUEST, USER_DETAILS_FAILURE, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAILURE } from '../constants/userConstants';\nexport const Login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const logout = () => async (dispatch) =>  {\n//     localStorage.removeItem('userInfo');\n//     dispatch({ type: USER_LOGOUT });\n// }\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  document.location.href = '/login';\n};\nexport const Register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/React/ecommerce-store/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAILURE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_FAILURE","USER_DETAILS_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAILURE","Login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","USER_DETAILS_RESET","document","location","href","Register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { USER_LOGIN_FAILURE, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAILURE, \r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAILURE,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAILURE} from '../constants/userConstants';\r\n\r\n\r\n\r\nexport const Login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        });\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login', \r\n            { email, password }, \r\n            config);\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_LOGIN_FAILURE, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message});\r\n    }\r\n    \r\n}\r\n\r\n// export const logout = () => async (dispatch) =>  {\r\n//     localStorage.removeItem('userInfo');\r\n//     dispatch({ type: USER_LOGOUT });\r\n// }\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    document.location.href = '/login'\r\n  }\r\n\r\nexport const Register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        });\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users', \r\n            { name, email, password }, \r\n            config);\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_REGISTER_FAILURE, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message});\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n        \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`, \r\n            config\r\n            );\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_DETAILS_FAILURE, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message});\r\n    }\r\n    \r\n    \r\n} \r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n        \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`,\r\n            user,\r\n            config\r\n            );\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        });\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_UPDATE_PROFILE_FAILURE, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message});\r\n    }\r\n    \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}