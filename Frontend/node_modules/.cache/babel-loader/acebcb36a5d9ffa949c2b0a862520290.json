{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Testing\\\\ecommerce\\\\frontend\\\\src\\\\Screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../Components/Rating';\nimport { listProductDetails, clearProductDetails } from '../actions/productActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../Components/Loader';\nimport { Message } from '../Components/Message';\nimport { addItemToCart } from '../actions/cartActions'; //params\n\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    product,\n    loading,\n    error\n  } = useSelector(state => state.productDetails);\n  useEffect(() => {\n    //dispatch(listProductDetails(id));\n    return () => {\n      dispatch(clearProductDetails());\n    };\n  }, [dispatch, id]);\n\n  const addToCartHandler = () => {\n    //TODO\n    dispatch(addItemToCart(id, qty));\n    navigate(`/cart/${id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-20\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn bg-light rounded mb-2 mt-5\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 53\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: product.image,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", product.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews} reviews`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Description: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: product.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"rounded\",\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: product.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"In Stock:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: `${product.countInStock}` > 0 ? `${product.countInStock} Items` : 'Out of Stock'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Quantity:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: qty,\n                      onChange: e => setQty(e.target.value),\n                      children: [...Array(product.countInStock).keys()].map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: i + 1,\n                        children: i + 1\n                      }, i + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToCartHandler,\n                className: \"btn-block m-2 rounded\",\n                variant: \"success\",\n                type: \"button\",\n                disabled: product.countInStock === 0,\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductScreen, \"cqc2OZxb68WQinUGm9s/DKhfSPE=\", true, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["D:/React-Testing/ecommerce/frontend/src/Screens/ProductScreen.js"],"names":["useState","useEffect","Link","useNavigate","Row","Col","Image","ListGroup","Card","Button","Form","Rating","listProductDetails","clearProductDetails","useDispatch","useSelector","Loader","Message","addItemToCart","useParams","ProductScreen","id","navigate","qty","setQty","dispatch","history","useHistory","product","loading","error","state","productDetails","addToCartHandler","image","name","price","rating","numReviews","description","countInStock","e","target","value","Array","keys","map","i"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\r\nimport Rating from '../Components/Rating'\r\nimport { listProductDetails, clearProductDetails } from '../actions/productActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Loader} from '../Components/Loader';\r\nimport {Message} from '../Components/Message';\r\nimport { addItemToCart } from '../actions/cartActions'\r\n\r\n\r\n\r\n//params\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nconst ProductScreen = (   ) => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const { product, loading, error } = useSelector(state => state.productDetails);\r\n\r\n    useEffect(() => {\r\n        //dispatch(listProductDetails(id));\r\n\r\n        return () => {\r\n            dispatch(clearProductDetails());\r\n        }\r\n    }, [dispatch, id])\r\n\r\n    const addToCartHandler = () => {\r\n        //TODO\r\n        dispatch(addItemToCart(id, qty));\r\n        navigate(`/cart/${id}?qty=${qty}`);\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n                <div className=\"m-20\">\r\n                    <Link to=\"/\" className=\"btn bg-light rounded mb-2 mt-5\">Back</Link>\r\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                            </ListGroup.Item>   \r\n                            <ListGroup.Item>\r\n                                <strong>Price: </strong>\r\n                                <span>${product.price}</span>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating \r\n                                value={product.rating}\r\n                                text={`${product.numReviews} reviews`} />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <strong>Description: </strong>\r\n                                <span>{product.description}</span>\r\n                            </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card className=\"rounded\">\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Price:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                {product.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                In Stock:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                {`${product.countInStock}` > 0 ? `${product.countInStock} Items` : 'Out of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Quantity:\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Control as=\"select\" value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                        {[...Array(product.countInStock).keys()].map(i => (\r\n                                                            <option key={i + 1} value={i + 1}>{i + 1}</option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                    <Button \r\n                                    onClick={addToCartHandler}\r\n                                    className=\"btn-block m-2 rounded\" \r\n                                    variant=\"success\" type=\"button\" \r\n                                    disabled={product.countInStock === 0}>\r\n                                        Add to Cart\r\n                                    </Button>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    }\r\n            </div>\r\n</>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductScreen"]},"metadata":{},"sourceType":"module"}