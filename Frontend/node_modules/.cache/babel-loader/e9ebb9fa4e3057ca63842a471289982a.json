{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_REQUEST, PRODUCT_REQUEST_SUCCESS, PRODUCT_REQUEST_FAILURE } from '../constants/actionTypes';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_REQUEST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_REQUEST_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/React-Testing/ecommerce/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_REQUEST","PRODUCT_REQUEST_SUCCESS","PRODUCT_REQUEST_FAILURE","listProducts","dispatch","type","data","get","payload","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACKC,eADL,EAEKC,uBAFL,EAGKC,uBAHL,QAGoC,0BAHpC;AAMA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAqB;AACnD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,eAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,uBADD;AAELO,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GARD,CAQE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,uBADD;AAELM,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACPF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADb,GAEPF,KAAK,CAACE;AAJH,KAAD,CAAR;AAKH;AACJ,CAhBM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n     PRODUCT_REQUEST, \r\n     PRODUCT_REQUEST_SUCCESS, \r\n     PRODUCT_REQUEST_FAILURE } from '../constants/actionTypes';\r\n\r\n\r\nexport const listProducts = () => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: PRODUCT_REQUEST });\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({ \r\n            type: PRODUCT_REQUEST_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_REQUEST_FAILURE, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}