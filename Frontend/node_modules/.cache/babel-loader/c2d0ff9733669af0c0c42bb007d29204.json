{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './reducers/productListReducer';\nimport { productDetailsReducer } from './reducers/productDetailsReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer';\nimport { createOrderReducer, createOrderDetails, orderPayReducer } from './reducers/orderReducer';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []; //const userInforFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  updateProfile: userUpdateProfileReducer,\n  shippingAddress: shippingAddressFromStorage,\n  createOrder: createOrderReducer,\n  orderDetails: createOrderDetails,\n  orderPay: orderPayReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nexport const store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));","map":{"version":3,"sources":["D:/ecommerce-store/frontend/src/Store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","createOrderReducer","createOrderDetails","orderPayReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","updateProfile","shippingAddress","createOrder","orderDetails","orderPay","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,QAAoG,wBAApG;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,QAAwE,yBAAxE;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH,C,CACA;;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIE,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACnCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADmC,GACmB,EADtD;AAGF,MAAMK,OAAO,GAAGrB,eAAe,CAAC;AAC5BsB,EAAAA,WAAW,EAAElB,kBADe;AAE5BmB,EAAAA,cAAc,EAAElB,qBAFY;AAG5BmB,EAAAA,IAAI,EAAElB,WAHsB;AAI5BmB,EAAAA,SAAS,EAAElB,gBAJiB;AAK5BmB,EAAAA,YAAY,EAAElB,mBALc;AAM5BmB,EAAAA,WAAW,EAAElB,kBANe;AAO5BmB,EAAAA,aAAa,EAAElB,wBAPa;AAQ5BmB,EAAAA,eAAe,EAAET,0BARW;AAS5BU,EAAAA,WAAW,EAAEnB,kBATe;AAU5BoB,EAAAA,YAAY,EAAEnB,kBAVc;AAW5BoB,EAAAA,QAAQ,EAAEnB;AAXkB,CAAD,CAA/B;AAeA,MAAMoB,YAAY,GAAG;AACjBT,EAAAA,IAAI,EAAE;AACFU,IAAAA,SAAS,EAAEpB,oBADT;AAEFe,IAAAA,eAAe,EAAET;AAFf,GADW;AAKjBK,EAAAA,SAAS,EAAE;AACPU,IAAAA,QAAQ,EAAEhB;AADH;AALM,CAArB;AAUA,MAAMiB,UAAU,GAAG,CAAClC,KAAD,CAAnB;AAGA,OAAO,MAAMmC,KAAK,GAAGtC,WAAW,CAC5BsB,OAD4B,EAE5BY,YAF4B,EAG5B9B,mBAAmB,CACfF,eAAe,CAAC,GAAGmC,UAAJ,CADA,CAHS,CAAzB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer } from './reducers/productListReducer';\r\nimport { productDetailsReducer } from './reducers/productDetailsReducer';\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer';\r\nimport { createOrderReducer, createOrderDetails, orderPayReducer } from './reducers/orderReducer';\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n//const userInforFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \r\n  JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    updateProfile: userUpdateProfileReducer,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    createOrder: createOrderReducer,\r\n    orderDetails: createOrderDetails,\r\n    orderPay: orderPayReducer,\r\n\r\n})\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}